name: "Manual Release Draft"

on:
  workflow_dispatch:
    inputs:
      previous_version:
        description: "Previous release version (e.g., v1.0.0)"
        required: true
        type: string

permissions:
  contents: write  # ✅ Required for creating releases
  pull-requests: read  # ✅ Required for fetching contributors

jobs:
  create_release_draft:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for accurate logs

      - name: Generate Release Tag
        run: |
          RELEASE_TAG="release/$(date +%Y%m%d%H%M%S)"
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV

      - name: Generate Changelog
        run: |
          echo "## Changelog since ${{ github.event.inputs.previous_version }}" > changelog.md
          echo "" >> changelog.md

          echo "### 🚀 Features" >> changelog.md
          git log --pretty=format:"- %s (%an) [#%h]" --grep="feature" ${{ github.event.inputs.previous_version }}..main >> changelog.md || echo "- No new features" >> changelog.md
          echo "" >> changelog.md

          echo "### 🐛 Bug Fixes" >> changelog.md
          git log --pretty=format:"- %s (%an) [#%h]" --grep="fix" ${{ github.event.inputs.previous_version }}..main >> changelog.md || echo "- No bug fixes" >> changelog.md
          echo "" >> changelog.md

          echo "### 🧰 Maintenance" >> changelog.md
          git log --pretty=format:"- %s (%an) [#%h]" --grep="maintenance" ${{ github.event.inputs.previous_version }}..main >> changelog.md || echo "- No maintenance updates" >> changelog.md
          echo "" >> changelog.md

          echo "**[See all changes](https://github.com/${{ github.repository }}/compare/${{ github.event.inputs.previous_version }}...$RELEASE_TAG)**" >> changelog.md

      - name: Get Contributors
        run: |
          echo "### Contributors" >> changelog.md
          git shortlog -sne ${{ github.event.inputs.previous_version }}..main | awk '{$1=""; print "- "$0}' >> changelog.md
          echo "" >> changelog.md

      - name: Display Changelog
        run: cat changelog.md

      - name: Upload Release Assets
        run: |
          mkdir -p release-assets
          echo "Sample release asset" > release-assets/sample.txt  # Example asset
        if: always()

      - name: Create Draft Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: "${{ env.RELEASE_TAG }}"
          body_path: changelog.md
          draft: true
          files: release-assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
